#!/usr/bin/bash

# passphrase
#read -s -p "passphrase to encrypt backup: " passphrase

# passphrase
#read -s -p "Bookmarks root directory: " root_dir

passphrase="$1"
root_dir="$2"
printf "passphrase = %s\n" "$passphrase"
printf "root_dir = %s\n" "$root_dir"


#root_dir="/var/home/valyakuttan/.var/app/net.mullvad.MullvadBrowser/.mullvad/mullvadbrowser/ntppsk43.default-release"
bookmarks="${root_dir}/places.sqlite"

# tmp variables
tmp="$(mktemp -d)"
last_backup="${tmp}/places.sqlite"

# data variables
backup_location="data"
backup_file="${backup_location}/places.asc"

# git variables
git_remote="origin"
git_branch="main"

# put current date as yyyy-mm-dd HH:MM:SS in $date
printf -v current_date '%(%Y-%m-%d %H:%M:%S)T' -1
commit_message="backup of ${current_date}"


function retrieve_backup() {
  local passphrase="$1"
  local output_file_path="$2"
  local file_path="$3"

  gpg --yes --batch --pinentry-mode=loopback --passphrase="${passphrase}" --output "${output_file_path}" -d "${file_path}"
}

function encrypt_backup() {
  local passphrase="$1"
  local output_file_path="$2"
  local file_path="$3"

  gpg --yes --batch --pinentry-mode=loopback --passphrase="${passphrase}" --output "${output_file_path}" --armor -c --s2k-cipher-algo AES256 "${file_path}"
}

function save_changes() {
  local message="$1"
  local remote="$2"
  local branch="$3"

  git add .
  git status
  git commit -m "${message}"
  git push "${remote}" "${branch}"

  echo "${message} completed"
}

# make sure backup_location exists
mkdir -p "${backup_location}"

if [[ -f "${backup_file}" ]]; then
  retrieve_backup "${passphrase}" "${last_backup}" "${backup_file}"
  sqlite_diff="$(diff "${last_backup}" "${bookmarks}")"
  git_status="$(git status --porcelain)"

  if [[ -n "${sqlite_diff}" ]] || [[ -n "${git_status}" ]]; then
    encrypt_backup "${passphrase}" "${backup_file}" "${bookmarks}"
    save_changes "${commit_message}" "${git_remote}" "${git_branch}"
  else
    echo "Nothing to backup"
  fi
else
  encrypt_backup "${passphrase}" "${backup_file}" "${bookmarks}"
  save_changes "${commit_message}" "${git_remote}" "${git_branch}"
fi

# cleanup tmp
rm -rf "${tmp}"
